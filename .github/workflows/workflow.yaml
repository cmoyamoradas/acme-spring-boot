name: acme-build-scan-publish
on: push
env:
  DOCKER_REPO: 'carlosmm-docker-virtual'
  MAVEN_REPO: 'carlosmm-maven-virtual'
  IMAGE_NAME: 'acme-app'
  IMAGE_VERSION: '1.0'
  RT_DOCKER_REGISTRY: 'soleng.jfrog.io'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v2
        env:
          JF_ENV_1: ${{ secrets.JF_SECRET_ENV_1 }}
      - name: Ping Artifactory
        run: |
          jf c show
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Config Maven
        run: |
          jf mvnc --repo-resolve-releases=${{ env.MAVEN_REPO }} --repo-resolve-snapshots=${{ env.MAVEN_REPO }} --repo-deploy-releases=${{ env.MAVEN_REPO }} --repo-deploy-snapshots=${{ env.MAVEN_REPO }}
      - name: Package Application
        run: |
          jf mvn clean package -Dcheckstyle.skip -DskipTests
      - name: Build the tagged Docker image
        run: |
          docker build . --file Dockerfile --build-arg='JAR_FILE=target/*.jar' --tag ${{ env.RT_DOCKER_REGISTRY}}/${{ env.DOCKER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION}}
      - name: Run JFrog CLI
        run: |
          # Push image to Artifactory
          jf rt docker push ${{ env.RT_DOCKER_REGISTRY }}/${{ env.DOCKER_REPO }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_VERSION }} ${{ env.DOCKER_REPO }} --build-name=${{ github.workflow }} --build-number=${{ github.run_number }}
          # Collect environment variables for the build
          jf rt bce ${{ github.workflow }} ${{ github.run_number }}
          # Publish build info
          jf rt bp ${{ github.workflow }} ${{ github.run_number }}
          # Scan published build with fail by default (true)
          jf bs ${{ github.workflow }} ${{ github.run_number }}